import { InfoTwoTone } from '@mui/icons-material'
import { Typography, TextField, Button, FormControl, InputLabel, MenuItem, Select, Box, SelectChangeEvent } from '@mui/material'
import React, { ChangeEvent, useState } from 'react';
import SubTitle from './utils/Subtitle';


interface basicHabitObject  {
    [property:string]:string
}

interface Props{
    identity:basicHabitObject,
    setIdentity:React.Dispatch<React.SetStateAction<basicHabitObject>>,
    actionSystem:basicHabitObject,
    setActionSystem:React.Dispatch<React.SetStateAction<basicHabitObject>>,

}

const AddHabitColumnTwo:React.FC<Props> = ({identity,setIdentity,actionSystem,setActionSystem}) => {

    console.log(actionSystem)

    const identityChangeHandler = (e:ChangeEvent<HTMLInputElement | HTMLSelectElement>,property:keyof basicHabitObject):void =>{
        setIdentity({
            ...identity,
            [property]:e.target.value   
        });
    }
    const systemActionChangeHandler = (e:ChangeEvent<HTMLInputElement >,property:keyof basicHabitObject):void =>{
        setActionSystem({
            ...actionSystem,
            [property]:e.target.value   
        });
    }
    
  return (
    <div >
        <Typography variant='h6' sx={{marginBottom:'1rem'}} component='h4'>Rules for changing the habit</Typography>
                <SubTitle text='Add an identity that this habit contributes to.' blue bold/>
        <div style={{display:'flex',flexDirection:'column',width:'full'}}>      
            <div style={{marginTop:'1rem' ,marginBottom:'2rem',display:'flex',justifyContent:'space-between'}}>
                    <TextField onChange={(e:ChangeEvent<HTMLInputElement>) => identityChangeHandler(e,'name')} sx={{width:'45%'}} id="habit-expected-identity" label="Identity" variant="outlined" />  
                    <div style={{marginLeft:'2rem',marginRight:'2rem'}}></div>
                        <FormControl sx={{ width:'45%'}}>
                            <InputLabel id="identity-level-select-label">Identity Level</InputLabel>
                            <Select
                            labelId="identity-level-select-label"
                            id="identiry-level-select"
                            value={identity.type}
                            label="Identity Level"
                            onChange={(e:any) => identityChangeHandler(e,'type')} 
                            >
                                <MenuItem value={'beginner'}>Beginner</MenuItem>
                                <MenuItem value={'amateur'}>Amateur</MenuItem>
                                <MenuItem value={'exper'}>Expert</MenuItem>
                            </Select>
                        </FormControl>
                    </div>
                <SubTitle  text='Create an action system' blue bold/>
            <Box>
                <div style={{display:'flex',justifyContent:"space-between"}}>
                    <Box sx={{width:'45%',display:'flex',flexDirection:'column'}}>
                        <SubTitle text='1. Add a hint of habit' />
                        <TextField value={actionSystem.hint || ''} onChange={(e:ChangeEvent<HTMLInputElement>)=>systemActionChangeHandler(e,'hint')} sx={{marginBottom:'1rem'}} id="habit-step-action" label="Add hint" variant="outlined" />
                        <SubTitle text='3. Add a reaction generated by the desire'/>
                        <TextField value={actionSystem.reaction || ''} onChange={(e:ChangeEvent<HTMLInputElement>)=>systemActionChangeHandler(e,'reaction')} sx={{marginBottom:'1rem'}} id="habit-step-action" label="Add reaction" variant="outlined" />
                        {/* <Button sx={{height:'56px', marginTop:'2rem',border:'2px solid',width:'150px'}} variant="outlined">Add system</Button> */}
                    </Box>
                    
                    <Box sx={{width:'45%',display:'flex',flexDirection:'column'}}>
                        <SubTitle  text='2. Add a desire created when you observe the hint' />
                        <TextField value={actionSystem.desire || ''} onChange={(e:ChangeEvent<HTMLInputElement>)=>systemActionChangeHandler(e,'desire')} id="habit-step-action" label="Add desire" variant="outlined" />
                        <SubTitle text='4. Add the reward received after the reaction'  />
                        <TextField value={actionSystem.reward || ''} onChange={(e:ChangeEvent<HTMLInputElement>)=>systemActionChangeHandler(e,'reward')} id="habit-step-action" label="Add reward" variant="outlined" />
                    </Box>
                </div>
            </Box>
        </div>
    </div>
  )
}

export default AddHabitColumnTwo